version: '3'

services:
  reverse-proxy:
    image: traefik:v2.0
    restart: unless-stopped
    command:
      - "--api"
      - "--providers.docker"
      - "--providers.file.filename=/tls-certs.toml"
      - "--entrypoints=Name:mongo Address::27017"
    ports:
      - "8080:8080"
      - "27017:27017"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/certs
      - ./tls-certs.toml:/tls-certs.toml

  mongo1:
    image: mongo
    hostname: mongo1.local
    restart: unless-stopped
    labels:
      - "traefik.tcp.routers.mongo1.rule=HostSNI(`mongo1.local`)"
      - "traefik.tcp.routers.mongo1.tls=true"
      - "traefik.tcp.routers.mongo1.entrypoints=mongo"

  mongo2:
    image: mongo
    hostname: mongo2.local
    restart: unless-stopped
    labels:
      - "traefik.tcp.routers.mongo2.rule=HostSNI(`mongo2.local`)"
      - "traefik.tcp.routers.mongo2.tls.passthrough=true"
      - "traefik.tcp.routers.mongo2.entrypoints=mongo"
    command:
      - "mongod"
      - "--sslMode=requireSSL"
      - "--sslPEMKeyFile=/certs/mongo.pem"
    volumes:
      - ./certs:/certs

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    labels:
      - "traefik.http.routers.mongo-express.rule=Host(`dashboard-mongo1.local`)"
      - "traefik.http.routers.mongo-express.tls=true"
      - "traefik.http.routers.mongo-express.entrypoints=mongo"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo1
